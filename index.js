import { prompt } from "./prompt.js";

function generateRandomNumber(min, max) {
  return Math.floor(min + Math.random() * (max - min));
}

console.log("Bienvenue dans le g√©n√©rateur de mot de passe !\n");
console.log(
  "R√®gles :\n" +
    "Le syst√®me g√©n√©rera un mot de passe al√©atoire en fonction : .\n" +
    "- Du nombre de caract√®res que vous aure√© choisis (entre 8 et 36 caract√®res).\n" +
    "- Si vous souhaitez ou non des caract√®res sp√©ciaux.\n" +
    "- Si vous souhaitez ou non des chiffres.\n" +
    "- Si vous souhaitez ou non des majuscules.\n\n" +
    "Commen√ßons ! üöÄ\n\n"
);

// Fonction pour valider si le nombre entr√© par l'utilisateur est valide
function isValidNumber(number) {
  if (Number.isNaN(number) || number < 8 || number > 36) {
    console.log(
      "Erreur : le nombre de caract√®res doit √™tre compris entre 8 et 36"
    );
    return false;
  }
  return true;
}

// Fonction pour v√©rifier si l'utilisateur r√©pond bien par y ou n
function promptYesNoQuestion(question) {
  let response;
  do {
    response = prompt(question).toLowerCase();
    if (response !== "y" && response !== "n") {
      console.log("Erreur : Veuillez r√©pondre par 'y' ou 'n'.");
    }
  } while (response !== "y" && response !== "n");
  return response === "y";
}

// Fonction pour v√©rifier si le mot de passe contient bien les demande de l'utilisateur
function isValidPassword(
  password,
  includeSpecial,
  includeNumbers,
  includeUppercase
) {
  if (includeSpecial && !/[!@#$%^&*()_+=<>?-]/.test(password)) {
    return false;
  }

  if (includeNumbers && !/\d/.test(password)) {
    return false;
  }

  if (includeUppercase && !/[A-Z]/.test(password)) {
    return false;
  }

  return true;
}

// Fonction pour demander √† l'utilisateur d'entrer un nombre de caract√®res valide
function promptNumberOfCharacters() {
  let number;
  do {
    number = Number(prompt("Combien de caract√®res souhaitez vous ? (8-36)"));
  } while (!isValidNumber(number));
  return number;
}

function generatePassword() {
  let password;
  let includeSpecialCharacters;
  let includeNumbers;
  let includeUppercase;

  do {
    // Demander le nombre de caract√®res
    let numberOfCharacters = promptNumberOfCharacters();

    // Demander si l'utilisateur souhaite des caract√®res sp√©ciaux
    includeSpecialCharacters = promptYesNoQuestion(
      "Voulez-vous inclure des caract√®res sp√©ciaux ? (y/n)"
    );

    // Demander si l'utilisateur souhaite des chiffres
    includeNumbers = promptYesNoQuestion(
      "Voulez-vous inclure des chiffres ? (y/n)"
    );

    // Demander si l'utilisateur souhaite des majuscules
    includeUppercase = promptYesNoQuestion(
      "Voulez-vous inclure des majuscules ? (y/n)"
    );

    // G√©n√©rer le mot de passe en fonction des r√©ponses de l'utilisateur
    password = generateRandomPassword(
      numberOfCharacters,
      includeSpecialCharacters,
      includeNumbers,
      includeUppercase
    );

    // V√©rifier si le mot de passe g√©n√©r√© est valide
    if (
      !isValidPassword(
        password,
        includeSpecialCharacters,
        includeNumbers,
        includeUppercase
      )
    ) {
      console.log(
        "Erreur : Le mot de passe g√©n√©r√© ne r√©pond pas aux crit√®res sp√©cifi√©s. Reg√©n√©ration..."
      );
    }
  } while (
    !isValidPassword(
      password,
      includeSpecialCharacters,
      includeNumbers,
      includeUppercase
    )
  );

  // Afficher le mot de passe g√©n√©r√©
  console.log("Mot de passe g√©n√©r√© :", password);
}

function generateRandomPassword(
  length,
  includeSpecial,
  includeNumbers,
  includeUppercase
) {
  // D√©finir les caract√®res possibles en fonction des crit√®res de l'utilisateur
  const lowercaseChars = "abcdefghijklmnopqrstuvwxyz";
  const specialChars = "!@#$%^&*()_+=<>?-";
  const numberChars = "0123456789";
  const uppercaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

  let allChars = lowercaseChars;

  if (includeSpecial) {
    allChars += specialChars;
  }

  if (includeNumbers) {
    allChars += numberChars;
  }

  if (includeUppercase) {
    allChars += uppercaseChars;
  }

  // G√©n√©rer le mot de passe al√©atoire
  let password = "";
  for (let i = 0; i < length; i++) {
    const randomIndex = generateRandomNumber(0, allChars.length);
    password += allChars.charAt(randomIndex);
  }

  return password;
}

// D√©marrer la g√©n√©ration du mot de passe
generatePassword();
